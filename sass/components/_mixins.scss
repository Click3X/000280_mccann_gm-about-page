/******************************************************************
Site Name: GM
Author: Jason Tordsen

Stylesheet: Sass Mixins
******************************************************************/

@mixin transition($transition...) {
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

// PREFIX
@mixin prefix($property, $value, $prefixes: ("-webkit-","-moz-","-o-","-ms-","")) {
  @each $prefix in $prefixes {
    #{$prefix}#{$property}: #{$value};
  }
}


@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

@mixin arrow($width:20px,$height:20px,$direction:right, $color:#FFF){
	width: 0; 
	height: 0;
	position: absolute;

	@if $direction == up {
	 	border-right: $width solid transparent;
		border-left: $width solid transparent;
		border-bottom: $height solid $color;
	} @else if $direction == right {
	 	border-top: $height solid transparent;
		border-bottom: $height solid transparent;
		border-left: $width solid $color;
	} @else if $direction == down {
	  	border-right: $width solid transparent;
		border-left: $width solid transparent;
		border-top: $height solid $color;
	} @else {
	  	border-top: $height solid transparent;
		border-bottom: $height solid transparent;
		border-right: $width solid $color;
	}
}

@mixin transition($prop:all,$duration:400ms,$ease:"linear", $delay:0){
	/* For Safari 3.1 to 6.0 */
	-webkit-transition-property: $prop;
	-webkit-transition-duration: $duration;
	-webkit-transition-timing-function: $ease;
	-webkit-transition-delay: $delay;

	/* Standard syntax */
	transition-property: $prop;
	transition-duration: $duration;
	transition-timing-function: $ease;
	transition-delay: $delay;
}

@mixin clearfix {
	*zoom: 1;
	&:before,
	&:after {
	    content: " ";
	    display: table;
	}

	&:after {
    clear: both;
	}
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%));
}



@mixin table-cell-center {
	display: table;
	> div {
		display: table-cell;
	  	vertical-align: middle;
	  	> div {
	  		width: 50%;
	  		margin: 0 auto;
	  	}
	}
}

@mixin fakeBorder {
	content: ""; display: block;
	position: absolute;
	top:0; left:0;
	width:0.15rem; height: 100%;
	background-color:$gm-yellow;
	@include prefix(transform-origin, top right);
	@include prefix(animation-fill-mode, both);
	@include prefix(animation-name, growBorder);
	@include prefix(animation-delay,1800ms);
	@include prefix(animation-duration,600ms);
	@media(min-width: $tablet-height) { width:0.2rem;}
}


@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}