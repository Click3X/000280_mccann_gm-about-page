// ONE PAGE SCSS
.loading { background: url('../demos/one-page/img/ico_loading.gif') no-repeat center center; }
section {
    opacity: 0;
    @include prefix(transition, opacity .6s);
}
.loaded section {
    opacity: 1;
}



.no-js {
	&.loading {
    	background: none;
	}
	section {
		opacity:1;
	    .loaded { opacity:1; }
	}
}







// #revealAnim .images-container img {
//     -webkit-transition: -webkit-transform .6s .9s;
//     -moz-transition: -moz-transform .6s .9s;
//     transition: transform .6s .9s;
//     // @include prefix(transition, opacity .6s);
// }
// #revealAnim .images-container .back { z-index:2;
//     -webkit-transform:translate3d(-40%, 0, 0);
//        -moz-transform:translate3d(-40%, 0, 0);
//             transform:translate3d(-40%, 0, 0);
// }
// #revealAnim .images-container .front {
//     -webkit-transform:translate3d(61.6%, 0, 0);
//        -moz-transform:translate3d(61.6%, 0, 0);
//             transform:translate3d(61.6%, 0, 0);
// }
// #revealAnim .images-container .side {
//     -webkit-transform:translate3d(-338%, 0, 0);
//        -moz-transform:translate3d(-338%, 0, 0);
//             transform:translate3d(-338%, 0, 0);
// }
// .viewing-page-2 #revealAnim .images-container img {
//     -webkit-transform: translate3d(0, 0, 0) !important;
//     -moz-transform: translate3d(0, 0, 0) !important;
//     transform: translate3d(0, 0, 0) !important;
// }



// .viewing-page-3 .fake-content {
//     -webkit-transform: translate3d(0, -100%, 0) !important;
//     -moz-transform: translate3d(0, -100%, 0) !important;
//     transform: translate3d(0, -100%, 0) !important;
// }
// .viewing-page-3 .fake-content .green {
//     -webkit-transform: translate3d(0, 160px, 0) !important;
//     -moz-transform: translate3d(0, 160px, 0) !important;
//     transform: translate3d(0, 160px, 0) !important;
// }


// .viewing-page-4 .fake-content,
// .viewing-page-4 .fake-content .green {
//     -webkit-transform: translate3d(0, 0, 0) !important;
//     -moz-transform: translate3d(0, 0, 0) !important;
//     transform: translate3d(0, 0, 0) !important;
// }